@use "../abstracts/variables" as v;
@use "../abstracts/mixins" as m;
@use "../abstracts/breakpoints" as b;

html {
  @include m.custom-scrollbar(var(--base-border), var(--primary));
  overflow-x: hidden;
  font-size: v.$fs-base;
  background-color: var(--second-bg);
  color: var(--base-color);
}

#viewPage {
  font-size: var(--md-font-default);
}

@media print {
  body * {
    visibility: hidden;
  }

  #viewPage,
  #viewPage * {
    visibility: visible;
  }
}

.sr-only {
  @include m.visually-hidden();
}

.float-right, 
.float-left {
  margin-block: 1.5em 1em;
  margin-inline: auto;
}

@include b.min(md) {
  .float-left {
    float: left;
    margin-right: 1rem;
  }

  .float-right {
    float: right;
    margin-left: 1rem;
  }
}

.grid {
  display: grid;
  gap: 1rem;

  &--fluid-sm {
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  }
  
  &--fluid {
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  }

  &--fluid-lg {
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  }

  @include b.min(md) {
    &--col-3 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
    &--col-4 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
    &--col-5 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }

  @include b.min(lg) {
    &--col-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
    &--col-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
    &--col-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
    &--col-5 {
      grid-template-columns: repeat(5, minmax(0, 1fr));
    }
  }
}
